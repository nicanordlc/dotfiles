#!/bin/bash
set -Eeuo pipefail

# NAME
#     clipboard
#
# Usage:
#     clipboard -c [ARG]...
#     clipboard -p
#
# Options
#     -c      Copy mode
#     -p      Paste mode

SUPPORTED_COPY_CMDS=(
    "pbcopy"
    "tmux load-buffer -"
)
SUPPORTED_PASTE_CMDS=(
    "pbpaste"
    "tmux save-buffer -"
)

copy_cmd=""
paste_cmd=""

# Pick first available clipboard backend
for i in "${!SUPPORTED_COPY_CMDS[@]}"; do
    candidate_copy=$(awk '{print $1}' <<<"${SUPPORTED_COPY_CMDS[$i]}")
    if command -v "$candidate_copy" &>/dev/null; then
        copy_cmd="${SUPPORTED_COPY_CMDS[$i]}"
        paste_cmd="${SUPPORTED_PASTE_CMDS[$i]}"
        break
    fi
done

if [[ -z "$copy_cmd" ]]; then
    echo "Error: No supported clipboard backend found (pbcopy or tmux)." >&2
    exit 1
fi

mode=""
while getopts ":cp" opt; do
    case "$opt" in
    c) mode="copy" ;;
    p) mode="paste" ;;
    *)
        echo "Usage: $0 -c [ARG]... | -p" >&2
        exit 1
        ;;
    esac
done
shift $((OPTIND - 1))

case "$mode" in
copy)
    if [ $# -gt 0 ]; then
        input="$*"
    elif [ ! -t 0 ]; then
        input="$(cat)"
    else
        echo "Error: No input provided for copy mode" >&2
        exit 1
    fi
    printf "%s" "$input" | eval "$copy_cmd"
    echo "Copied to clipboard âœ”"
    ;;
paste)
    eval "$paste_cmd"
    ;;
*)
    echo "Usage: $0 -c [ARG]... | -p" >&2
    exit 1
    ;;
esac
